{"version":3,"sources":["Demos.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Bypasser","App","actx","bypasserNode","AudioWorkletNode","oscillator","createOscillator","connect","destination","start","onePoleFilter","beginning","currentTime","middle","end","filterNode","parameters","get","setValueAtTime","exponentialRampToValueAtTime","sampleRate","noiseGenerator","modulator","OscillatorNode","modGain","GainNode","noiseGeneratorNode","paramAmp","frequency","value","gain","bitCrusher","bitCrusherNode","paramBitDepth","paramReduction","type","stop","linearRampToValueAtTime","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isPlaying","processor","node","moduleLoaded","status","audioWorklet","addModule","concat","module","setState","console","log","name","_this2","cb","window","AudioContext","webkitAudioContext","e","loadModule","port","postMessage","_this3","menu","react_default","a","createElement","es_menu","onClick","handleSelect","item","props","selectedKeys","current","Item","className","src","logo","alt","style","float","width","dropdown","overlay","size","href","icon","es_button","ghost","disabled","toggleNode","marginLeft","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8f1efa04.chunk.js","sourcesContent":["/*  The examples below utilize the Chrome Team's code practically verbatim, with the exception of some \n    slight modifications. Demos that produce sounds with discrete start and finish times are adjusted using\n    the AudioContext's currentTime so it may be re-triggered using the start/stop button. \n    Additionally, each function returns an AudioWorkletNode so that we can start and stop audio by\n    sending messages between the App and the AudioWorklet processor.  */\nexport const Bypasser = (App) => {\n    const { actx } = App;\n    const bypasserNode = new AudioWorkletNode(actx, 'bypass-processor');\n    const oscillator = actx.createOscillator();\n    oscillator.connect(bypasserNode).connect(actx.destination);\n    oscillator.start();\n    return bypasserNode;\n}\nexport const onePoleFilter = (App) => {\n        const { actx } = App;\n        const beginning = actx.currentTime;\n        const middle = actx.currentTime + 4;\n        const end = actx.currentTime + 8;\n        const filterNode = new AudioWorkletNode(actx, 'one-pole-processor');\n        const oscillator = actx.createOscillator();\n        const frequencyParam = filterNode.parameters.get('frequency');\n        frequencyParam\n          .setValueAtTime(0.01, beginning)\n          .exponentialRampToValueAtTime(actx.sampleRate * 0.5, middle)\n          .exponentialRampToValueAtTime(0.01, end);\n        oscillator.connect(filterNode).connect(actx.destination);\n        oscillator.start();\n        return filterNode;\n}\nexport const noiseGenerator = (App) => {\n    const { actx } = App;\n    const modulator = new OscillatorNode(actx);\n    const modGain = new GainNode(actx);\n    const noiseGeneratorNode = new AudioWorkletNode(actx, 'noise-generator');\n    const paramAmp = noiseGeneratorNode.parameters.get('amplitude');\n    noiseGeneratorNode.connect(actx.destination);\n    modulator.connect(modGain).connect(paramAmp);\n    modulator.frequency.value = 0.5;\n    modGain.gain.value = 0.75;\n    modulator.start();\n    return noiseGeneratorNode;\n}\nexport const bitCrusher = (App) => {\n    const { actx } = App;\n    const oscillator = actx.createOscillator();\n    const bitCrusherNode = new AudioWorkletNode(actx, 'bit-crusher-processor');\n    const paramBitDepth = bitCrusherNode.parameters.get('bitDepth');\n    const paramReduction = bitCrusherNode.parameters.get('frequencyReduction');\n    const beginning = actx.currentTime;\n    const middle = actx.currentTime + 4;\n    const end = actx.currentTime + 8;\n    oscillator.type = 'sawtooth';\n    oscillator.frequency.value = 5000;\n    oscillator.connect(bitCrusherNode).connect(actx.destination);\n    oscillator.start();\n    oscillator.stop(end);\n    paramBitDepth.setValueAtTime(1, 0);\n    paramReduction.setValueAtTime(0.01, beginning);\n    paramReduction.linearRampToValueAtTime(0.1, middle);\n    paramReduction.exponentialRampToValueAtTime(0.01, end);\n    return bitCrusherNode;\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Menu, Dropdown, Icon, Button } from 'antd';\nimport { Bypasser, onePoleFilter, noiseGenerator, bitCrusher } from './Demos'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isPlaying: false, /* Is audio currently playing? (Boolean) */\n      processor: null, /* Object containing processor name, callback, and menu item name */\n      node: null, /* Current AudioWorkletNode (AudioWorkletNode)*/\n      moduleLoaded: false, /* Has the selected AudioWorkletProcessor finished loading? (Boolean)*/\n      status: null /* Load status message (String) */\n    }\n  }\n  /* loadModule: given a module's name, adds it to the audioWorklet */\n  async loadModule() {\n    const { state, actx } = this;   \n    try {\n      await actx.audioWorklet.addModule(`worklet/${state.processor.module}.js`);\n      this.setState({moduleLoaded: true, status: null})\n      console.log(`loaded module ${state.processor.module}`);\n    } catch(e) {\n      this.setState({moduleLoaded: false})\n      console.log(`Failed to load module ${state.processor.module}`);\n    }\n  }\n  /* handleSelect: loads modules when selected from dropdown menu.\n     It also handles instantiating an AudioContext since it's likely the first user gesture.*/\n  handleSelect(name, processor) {\n    if(this.state.isPlaying) return;\n    this.setState({ processor: {name, module: processor.name, cb: processor.cb}, moduleLoaded: false, status: 'Loading module, please wait...' }, () => {\n      if(!this.actx) {\n        try {\n          console.log('New context instantiated')\n          this.actx = new (window.AudioContext || window.webkitAudioContext)();\n        } catch(e) {\n            console.log(`Sorry, but your browser doesn't support the Web Audio API!`, e);\n        }\n      } \n      this.loadModule()\n    });\n  }\n  /* toggleNode: starts and stops audio by sending a boolean via the AudioWorkletProcessor's message port.*/\n  toggleNode(){\n    const { state } = this;\n    if(state.isPlaying) {\n      console.log(`stopping ${state.processor.module}`)\n      state.node.port.postMessage(false)\n    } else {\n      console.log(`playing ${state.processor.module}`)\n      const node = state.processor.cb(this);\n      this.setState({ node });\n      node.port.postMessage(true);          \n    }\n    this.setState({isPlaying: !state.isPlaying });    \n  }\n  render() {\n    const { state } = this;\n    /* Menu is an overlay for the Ant Design dropdown component, passed in via props. */\n    const menu = (\n      <Menu onClick={(e) => this.handleSelect(e.item.props.name, e.item.props.processor)} selectedKeys={[this.state.current]}>\n        <Menu.Item name=\"Bypass Filter\" processor={{name: 'bypass-processor', cb: Bypasser}}>\n          Bypass Filter\n        </Menu.Item>\n        <Menu.Item name=\"One Pole Filter\" processor={{name: 'one-pole-processor', cb: onePoleFilter}}>\n          One Pole Filter\n        </Menu.Item>\n        <Menu.Item name=\"Noise\"  processor={{name: 'noise-generator', cb: noiseGenerator}}>\n          Noise\n        </Menu.Item>\n        <Menu.Item name=\"Bitcrusher\" processor={{name: 'bit-crusher-processor', cb: bitCrusher}}>\n          Bitcrusher\n        </Menu.Item>   \n      </Menu>\n    );\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <span>React + AudioWorklet = ❤</span>\n          <div style={{float:'left', width: '100%'}}>\n            <Dropdown overlay={menu} size='small'>\n              <a className=\"ant-dropdown-link\" href=\"#\">\n                {state.processor ? state.processor.name : 'Select a module'} <Icon type=\"down\" />\n              </a>\n            </Dropdown>\n            <Button ghost disabled={!state.moduleLoaded} onClick={() => this.toggleNode()} style={{marginLeft:'1%'}}>{state.isPlaying ? 'Stop' : 'Start'}</Button>\n          <br />\n          <small>{state.status}</small>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}